#include "hw.h"
#include <Wire.h>
#include <Tone.h>

unsigned char pic1[]=
{/*--  12864LOGO.bmp  --*/
/*--  128x64  --*/
0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x81,0xC1,0xF1,0xF9,0xFD,0xF1,0x01,0x81,0xC1,0x81,0x81,
0x81,0x81,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x81,0xF1,0xF9,0xFF,0xFD,0xC1,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xC1,0xE1,0xF1,0xF9,0xF9,0xFD,0xFD,0xF9,
0xF1,0xE1,0xE1,0xB1,0x11,0x19,0x1D,0x1D,0x0D,0x09,0x19,0x19,0x19,0x09,0x09,0x39,
0xF9,0xD9,0x81,0x01,0x01,0x01,0x01,0x81,0x81,0x81,0x81,0x01,0x01,0x01,0x01,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x03,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x01,0xFF,0xFF,0xFF,
0x03,0x03,0x07,0x07,0x07,0x0F,0x0F,0x0E,0x1E,0x1E,0x1E,0x3C,0x3C,0x3C,0x7C,0x78,
0x78,0xF8,0xF8,0xF8,0xF0,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x60,0x60,0x70,0x78,0x7E,0x7B,0x6F,0x4D,0x7B,0x73,0xFF,
0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1F,0x3F,0xFF,0x3F,0x1F,0xFF,0xFF,0xFF,
0xFF,0xF7,0xF7,0xF6,0xEC,0xDC,0xF8,0x30,0x30,0xF0,0xF8,0xF8,0xF8,0xF8,0xE8,0xEC,
0xEF,0xFB,0xFB,0xF3,0x0E,0x3F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x3C,0x00,0x00,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x3C,0xF8,0xF8,0xF8,0xF0,0xF0,0xF0,
0xE0,0xE0,0xC0,0xC0,0xC0,0x80,0x81,0x0F,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x7F,0xFF,
0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,
0xC3,0x7F,0xF8,0xD0,0x90,0x90,0xF0,0x78,0xDE,0xE3,0xF0,0xF8,0xF8,0xFC,0xBC,0xDF,
0x5F,0xFF,0xFF,0x7B,0x01,0x01,0x00,0x00,0xC0,0xF0,0xF1,0x7B,0x7B,0xFB,0xF7,0xF7,
0xE3,0xE3,0xC3,0x01,0x00,0x00,0x00,0xFF,0xF9,0x01,0x01,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1F,0x7F,0xF8,0xC1,
0x01,0x01,0x03,0x03,0x03,0x07,0x07,0x07,0x00,0x07,0x3F,0xFF,0xFF,0x00,0x00,0x3F,
0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xC0,0xFF,0xFF,0x1F,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
0x1C,0x38,0x30,0x23,0x77,0xFF,0xFF,0xC0,0x87,0x0F,0x1F,0x1F,0x1F,0x1F,0x1D,0x0C,
0x1E,0x39,0x19,0x00,0x00,0x00,0x00,0x00,0x03,0x19,0x19,0x3B,0x38,0x7F,0x7F,0x7F,
0x3F,0x3F,0x1F,0x02,0x00,0x80,0xC0,0xFF,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x01,0x07,
0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x1F,0x3F,0x80,0x00,
0x0F,0x0F,0x8E,0x8E,0x8E,0x8E,0x8E,0x8E,0x0E,0x0E,0x0E,0x0E,0x8E,0x8E,0x0E,0x0E,
0x0F,0x0F,0x01,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1E,0x79,0xE3,0x86,0x0C,0xC8,0xF8,0xF1,0x73,
0x23,0x23,0x23,0x63,0x61,0x60,0x40,0x40,0x40,0x60,0xE0,0xE0,0xE0,0x60,0xE0,0xF0,
0xF0,0xF8,0xCC,0x0C,0x06,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0x88,0x88,0x88,0x88,0x00,0x00,0x64,0xF2,0x9A,
0x8A,0xFE,0xFC,0x00,0x00,0x4C,0xDE,0x9A,0xB2,0xF6,0x64,0x00,0x02,0x7F,0xFF,0x82,
0x00,0x00,0xFF,0xFF,0x08,0x08,0x18,0x7F,0xE7,0x80,0x00,0x00,0xFE,0xFE,0x00,0x00,
0x4C,0xDE,0x9A,0xB2,0xF6,0x64,0x00,0x00,0xFE,0xFE,0x00,0x00,0xFE,0xFE,0x04,0x02,
0xFE,0xFC,0x00,0x00,0x7C,0xFE,0x82,0x44,0xFE,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFB,0x3F,0x03,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x0C,0x38,0xE0,0x40,
0x01,0x03,0x0F,0x38,0xF0,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x00,0x0C,0xEC,0x8C,0x8C,0x8C,0x0C,0x0C,0x8C,0x0C,0x0C,0x0C,0x8C,0x0C,0x8C,
0x0C,0x0C,0x0C,0x8C,0x0C,0x0C,0x8C,0x8C,0x8C,0xEC,0x0C,0xAC,0x0C,0x0C,0x0C,0x8C,
0x8C,0x8C,0x0C,0x8C,0x8C,0x8C,0x8C,0x0C,0x0C,0xEC,0x0C,0x0C,0x8C,0x8C,0x8C,0x0C,
0x0C,0x8C,0x0C,0x0C,0x0C,0x8C,0x0C,0x0C,0x0C,0x0C,0x8C,0x8C,0x0C,0x0C,0x0C,0x8C,
0x8C,0x8C,0x0C,0x0C,0x8D,0x8E,0x8E,0x0E,0x8F,0x8D,0x0C,0x0C,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xC0,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC3,0xFE,
0x3E,0x1C,0x0C,0x06,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0xFF,0x80,0x80,0x8F,0x88,0x88,0x88,0x87,0x80,0x87,0x88,0x88,0x88,0x8F,0x80,0xA0,
0xA7,0x98,0x87,0x80,0x80,0x87,0x88,0x88,0x88,0x8F,0x80,0x8F,0x80,0x80,0x89,0x8A,
0x8A,0x84,0x80,0xBF,0x88,0x88,0x88,0x87,0x80,0x8F,0x80,0x80,0x84,0x8A,0x8A,0x8F,
0x80,0xA0,0xA7,0x98,0x87,0x80,0x80,0x88,0x80,0x87,0x88,0x88,0x85,0x80,0x87,0x88,
0x88,0x88,0x87,0x80,0x8F,0x80,0x80,0x8F,0x80,0x80,0x8F,0x80,0x80,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x81,0x9F,0xB8,0xE0,0xC0,0xC0,
0xC2,0xC2,0xC6,0xE6,0xFE,0xC6,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xE0,0xFC,0x9F,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,

};


#define NVM_MEMORY ((volatile uint16_t *)0x000000)
#define APP_START 0x400


static inline bool nvmReady(void) {
        return NVMCTRL->INTFLAG.reg & NVMCTRL_INTFLAG_READY;
}

__attribute__ ((long_call, section (".ramfunc")))
static void selfdestruct() {
    __disable_irq();
    while (!nvmReady())
        ;
    NVMCTRL->STATUS.reg |= NVMCTRL_STATUS_MASK;
    NVMCTRL->ADDR.reg  = (uintptr_t)&NVM_MEMORY[APP_START / 4];
    NVMCTRL->CTRLA.reg = NVMCTRL_CTRLA_CMD_ER | NVMCTRL_CTRLA_CMDEX_KEY;
    while (!nvmReady())
        ;
    NVIC_SystemReset() ;
    while (true);
}

Touchcontrol *t;
LEDcontrol *l;

void setup() {
  // put your setup code here, to run once:
  pinMode(2,OUTPUT);
  pinMode(3,OUTPUT);
  pinMode(4,OUTPUT);
  pinMode(5,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(7,OUTPUT);
  pinMode(9,OUTPUT);
  pinMode(10,OUTPUT);
  pinMode(11,OUTPUT);
  pinMode(12,OUTPUT);
  pinMode(16,OUTPUT);
  pinMode(20,OUTPUT);
  digitalWrite(20,LOW);
  digitalWrite(11,LOW); //bl mode
  digitalWrite(12,LOW); //hold esp32 in reset
  //Serial1.begin(115200);
  //Serial.begin(115200);
  digitalWrite(10,0);
  digitalWrite(2,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(16,HIGH);
  Wire.setClock(1000000);
  Wire.begin();
  Wire.setClock(1000000);
  InitDisplay();
  Display_Picture(pic1);
  t=new Touchcontrol(300);
  l=new LEDcontrol(10);
  l->setled(0,255,255,255);
  l->setled(1,255,255,255);
  l->setled(2,255,255,255);
  l->setled(3,255,255,255);
  l->setled(4,255,255,255);
  l->setled(5,255,255,255);
  l->setbl(255);
  
  delay(5000);
  selfdestruct();
  
}


void Start(uint8_t addr){
  Wire.beginTransmission(addr);
}

void Stop(){
  Wire.endTransmission();
}

void SendByte(uint8_t val){
  Wire.write(val);
}

void Set_Page_Address(unsigned char add)
{  Start(0x38);
  SendByte(0xb0|add);
  Stop();
}



void Set_Column_Address(unsigned char add)
{ Start(0x38);
  SendByte((0x10|(add>>4)));
  SendByte((0x0f&add)|0X04);
  Stop();
}

void Display_Picture(unsigned char pic[])
{
    unsigned char i,j,num=0;
  
  for(i=0;i<8;i++)
  {
    Set_Page_Address(i);
    for(num=0;num<4;num++){
      Set_Column_Address(num*0x20);
      
    
    Start(0x39);
        for(j=0;j<0x20;j++)
    {
        SendByte(pic[i*0x80+num*0x20+j]);
    }
    Stop();
    }
  }
}

void clearscreen(void){
    unsigned char i,j,num=0;
  
  for(i=0;i<8;i++)
  {
    Set_Page_Address(i);
    for(num=0;num<4;num++){
      Set_Column_Address(num*0x20);
      
    Start(0x39);
        for(j=0;j<0x20;j++)
    {
        SendByte(0);
    }
    Stop();
    }
  }
}

  


void InitDisplay(){
Start(0x38);
  
    SendByte(0x2f);        //Power_Control
    SendByte(0xA2);        // BIAS Setting   A2(1/9);A3(1/7)
    SendByte(0xA1);        // Set SEG Direction
    SendByte(0xC8);        // Set COM Direction
                          
    SendByte(0x24);        //Set VLCD Resistor Ratio    0-7
    SendByte(0x81);        // Set Electronic Volume
    SendByte(37);        // Contrast level  0~63
    SendByte(0x40);      //Initial_Dispay_Line
    SendByte(0xAF);        // Display ON

    Stop();

    Start(0x38); 
    SendByte(0xA7); //invert display
    Stop();


}


void loop() {
  
}


